cmake_minimum_required(VERSION 3.10)

set(CMAKE_VERBOSE_MAKEFILE ON)
# Set the project name and version
project(MWDeviceTreeGen VERSION 1.0)

find_program(DTC_EXECUTABLE NAMES dtc)
if (NOT DTC_EXECUTABLE)
  message(FATAL_ERROR "dtc (Device tree compiler) not found")
endif()

# Get the path to the kernel source and the target architecture from the environment
set(MACHINE_OVERRIDES "${MACHINE_OVERRIDES}")
set(ARCH "")
set(BOARD "")
set(CROSS_COMPILE_GCC "${CROSS_COMPILE}gcc")
set(LINUX_KERNEL  "${KERNEL_DIR}")
set(SUPPORTED_BOARDS "")
set(SUPPORTED_ARCH "")

list(APPEND SUPPORTED_ARCH
  zynq
  zynqmp
)

foreach(arch IN LISTS SUPPORTED_ARCH)
  string(FIND "${MACHINE_OVERRIDES}" "${arch}:" ARCHFOUND)
  if(NOT ${ARCHFOUND} EQUAL -1)
    set(ARCH "${arch}")
    break()
  endif()
endforeach()


list(APPEND SUPPORTED_BOARDS
  zcu102
  zcu106
  zcu102_revB
  zcu208
  zcu216
  zcu111
  zybo
  zyboz7
  picozed
  adrv9361
  zc706
  zc702
  zed
)

foreach (b IN LISTS SUPPORTED_BOARDS)
  string(FIND "${MACHINE_OVERRIDES}" "${b}" BOARDFOUND)
  if (NOT ${BOARDFOUND} EQUAL -1)
    set(BOARD "${b}")
    break()
  endif()
endforeach()

set(DTFOLDER "${CMAKE_CURRENT_SOURCE_DIR}/${ARCH}/boards/${BOARD}/dts") 
if (NOT EXISTS "${DTFOLDER}")
 message(FATAL_ERROR "!!!No such folder - ${DTFOLDER}..")
endif()


set(INCLUDE_DIRS "")
set(GCC_FLAGS "")
list(APPEND GCC_FLAGS 
  -E
  -nostdinc
  -undef
  -DARCH=${ARCH}
  -D__DTS__
  -x assembler-with-cpp
)
list(APPEND INCLUDE_DIRS
  -I ${LINUX_KERNEL}/include
  -I ${LINUX_KERNEL}/arch/arm64/boot/dts/xilinx
  -I ${LINUX_KERNEL}/arch/arm/boot/dts 
  -I ${CMAKE_CURRENT_SOURCE_DIR} 
  -I ${CMAKE_CURRENT_SOURCE_DIR}/common/dts
  -I ${CMAKE_CURRENT_SOURCE_DIR}/zynqmp/dts 
  -I ${CMAKE_CURRENT_SOURCE_DIR}/zynq/dts
)

file(GLOB DTS_FILES "${DTFOLDER}/*.dts")

foreach (DTS_FILE IN LISTS DTS_FILES)
  # Get the filename without folder and extension
  if ("${DTS_FILE}" STREQUAL "base.dts")
    continue()
  endif()
  get_filename_component(DTS_FILENAME_NOEXT ${DTS_FILE} NAME_WE)
  get_filename_component(DTS_FOLDER_PATH ${DTS_FILE} DIRECTORY)
  string(REPLACE "-" "_" DTBNAME ${DTS_FILENAME_NOEXT})
  set(DTS_PRE_PROC_FILE  "${CMAKE_CURRENT_BINARY_DIR}/${DTBNAME}_pre.dts")
  set(DTS_PRE_PROC_DEP_FILE "${CMAKE_CURRENT_BINARY_DIR}/${DTBNAME}.dep")
  set(DTB_FILE "${CMAKE_CURRENT_BINARY_DIR}/devicetree_${DTBNAME}.dtb")
  set(DTC_LOG "${CMAKE_CURRENT_BINARY_DIR}/devicetree_${DTBNAME}.log")
  # Create a custom command that generates a device-tree blobs 
  add_custom_command(
    OUTPUT ${DTS_PRE_PROC_FILE}
    COMMAND ${CROSS_COMPILE_GCC} ${GCC_FLAGS} -Wp,-MD,${DTS_PRE_PROC_DEP_FILE} ${INCLUDE_DIRS} -I ${DTS_FOLDER_PATH} -o ${DTS_PRE_PROC_FILE} ${DTS_FILE}
    DEPENDS ${DTS_FILE}
    COMMENT "### Pre-processing ${DTS_FILE}..."
    VERBATIM
  )

  # Create a custom command that generates a device-tree blobs 
  add_custom_command(
    OUTPUT ${DTB_FILE}
    COMMAND ${DTC_EXECUTABLE} -@ -I dts -O dtb -o ${DTB_FILE} ${DTS_PRE_PROC_FILE} &> ${DTC_LOG}
    DEPENDS ${DTS_PRE_PROC_FILE}
    COMMENT "### Compiling ${DTB_FILE}..."
    VERBATIM
  )
  
  list(APPEND DTB_FILES ${DTB_FILE})
endforeach()


# Create a custom target that depends on the output generated by the custom command
add_custom_target(
  CompileDTS ALL
  DEPENDS ${DTB_FILES}
)

foreach(dtb IN LISTS DTB_FILES)
  install(
    FILES ${dtb}
    DESTINATION /boot/dtbs
  )
endforeach()
